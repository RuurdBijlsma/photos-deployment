version: "3.8"

services:

  reverse-proxy:
    build:
      context: nginx
      args:
        - BACKEND_URL=http://backend:7000
    restart: unless-stopped
    ports:
      - "9475:9475"
    depends_on:
      backend:
        condition: service_healthy

  backend:
    build: https://github.com/RuurdBijlsma/photos-backend
    command: [ "start", "-e", "production" ]
    environment:
      PROCESSING_API_URL: "http://processing:9000"
    depends_on:
      postgres:
        condition: service_healthy
      processing:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:7000/_health || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 5

  processing:
    build: https://github.com/RuurdBijlsma/photos-processing
    command: [ "--port", "9000" ]
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9000/health || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres:
    image: pgvector/pgvector:pg17
    environment:
      POSTGRES_USER: loco
      POSTGRES_PASSWORD: loco
      POSTGRES_DB: photos-backend_production
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U loco -d photos-backend_production" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
